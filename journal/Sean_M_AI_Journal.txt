AI Usage Journal
Sean McLean
smclean2@umd.edu
Section 0203

Week 2, Entry #1
This week I made some usage of AI during my coding for the first time this semester. As I was completing the weekly exercises, I came across a question that was unfamiliar (print a fixed width label so that words align, this ultimately ended up being accomplished using the f-format feature). I was not aware that this was even a feature in python, as had I ever seen width mentioned with regards to printing (this material wasn't covered in my 126 section last semester), so I prompted perplexity AI to provide me code that allows printed statements to be adjusted to a set width, and the code it returned was : print(f"Title: {title:<30}  Author: {author:<20}") , which signaled to me that I needed to be using the f formatter and adding the :<num after each variable encased in the variable brackets. After this I coded my final solution with different numbers, and noted in my notebook that this was a feature you could use when f-formatting.

Week 3, Entry #2
This week I made a couple more minor usages of AI in my weekly exercises. The first instance was when I couldnt recall which function to use to find the index of characters in a string, so I looked up what that function was, and Google Gemini returned the result that there are two functions (.index() for lists, .find() for strings). Once I remembered that I was able to advance quickly through the exercises, until I reached the later exercise involving the enforcement of the title casing, where I couldnt remember that function either, which I again prompted gemini to provide me with (its the string.title() function), before quickly implementing the function in my response to the question. I probably need to freshen up on my functions knowledge a little bit, remembering what does what.

Week 4, Entry # 3
This week I again made some small references to AI in my weekly exercises. The one I remember the most was while I was attempting the first exercise on the sheet (the normalize title one), I at first implemented a very long solution that spanned several lines of code. Since the exercises are meant to be programmed with simplicity, I could not help but wonder if I was forgetting something, so I pasted my solution into perplexity AI and asked if there were any built in functions that could simplify my code. It told me to consider implementing the "'string.join" function, which given a list of strings inserts a string in between each entry and concatenates everything together. So I thought to make the string a space, and after combining it with the split and title functions, my solution was reduced to just a single return statement. Later on in the exercises I was stuck on the final function I had not gotten around to, which was the starts with prefix exercise, and so I asked perplexity AI if python has a built in function to deal with this sort of thing, where it reminded me of the .startswith() function, which I ultimately implemented (I find it odd I couldn't remember this function, as it appeared very frequently in my INST126 section last semester).